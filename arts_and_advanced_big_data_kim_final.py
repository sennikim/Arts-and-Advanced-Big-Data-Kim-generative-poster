# -*- coding: utf-8 -*-
"""Arts and Advanced Big Data-Kim-Final.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xKNEwOXF-MxzskAhpPPG8cs8CYyUgSUp

# Final
"""

# Final Project: Generative Poster Studio
# Author: Kim Seyeon
# Course: Arts & Advanced Big Data
# Combines Weeks 2–5 into one integrated interactive system.

import os, random, math
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from ipywidgets import interact, Dropdown, IntSlider, FloatSlider, Button, HBox, VBox

# -------------------------
# Blob / Flower / Sphere Generators
def blob(center=(0.5, 0.5), r=0.3, points=200, wobble=0.15):
    angles = np.linspace(0, 2*math.pi, points)
    radii = r * (1 + wobble*(np.random.rand(points)-0.5))
    x = center[0] + radii*np.cos(angles)
    y = center[1] + radii*np.sin(angles)
    return x, y

def flower(center=(0.5,0.5), petals=8, radius=0.2, points=50):
    curves=[]
    angles = np.linspace(0, 2*np.pi, petals, endpoint=False)
    for a in angles:
        t = np.linspace(0,1,points)
        x = center[0] + t*radius*np.cos(a) + np.random.normal(0,0.01,points)
        y = center[1] + t*radius*np.sin(a) + np.random.normal(0,0.01,points)
        curves.append((x,y))
    return curves

def sphere(center=(0.5,0.5), radius=0.05, points=100):
    t = np.linspace(0,2*np.pi,points)
    x = center[0] + radius*np.cos(t)
    y = center[1] + radius*np.sin(t)
    return x, y

# -------------------------
# CSV Palette Manager
PALETTE_FILE = "palette.csv"
def init_palette():
    if not os.path.exists(PALETTE_FILE):
        df = pd.DataFrame([
            {"name":"sky","r":0.4,"g":0.7,"b":1.0},
            {"name":"sun","r":1.0,"g":0.8,"b":0.2},
            {"name":"forest","r":0.2,"g":0.6,"b":0.3}
        ])
        df.to_csv(PALETTE_FILE,index=False)
def read_palette():
    return pd.read_csv(PALETTE_FILE)
def load_csv_palette():
    df = read_palette()
    return [(r.r, r.g, r.b) for r in df.itertuples()]

# -------------------------
# Style Presets
def make_palette(mode="pastel"):
    if mode == "csv":
        return load_csv_palette()
    if mode == "vivid":
        base=[(1,0,0),(0,1,0),(0,0,1),(1,1,0),(1,0,1)]
    elif mode == "mono":
        base=[(0.2,0.4,1.0),(0.3,0.5,1.0),(0.4,0.6,1.0)]
    else:  # pastel
        base=[(1.0,0.8,0.8),(1.0,0.9,0.7),(0.8,1.0,0.8),(0.7,0.9,1.0)]
    return random.choices(base,k=6)

# -------------------------
# Main Drawing Function
def draw_poster(style="Pastel", shape="Blob", n_layers=8, wobble=0.15, seed=None, palette_mode="pastel", save=False):
    if seed is not None:
        random.seed(seed)
        np.random.seed(seed)

    plt.figure(figsize=(6,8))
    plt.axis("off")
    plt.gca().set_facecolor((0.98,0.98,0.97))
    palette = make_palette(palette_mode)

    for i in range(n_layers):
        color = random.choice(palette)
        alpha = random.uniform(0.3,0.6)
        if shape == "Blob":
            cx, cy = random.random(), random.random()
            rr = random.uniform(0.15,0.45)
            x,y = blob((cx,cy), r=rr, wobble=wobble)
            plt.fill(x,y,color=color,alpha=alpha,edgecolor=(0,0,0,0))
        elif shape == "Flower":
            curves = flower(center=(random.random(),random.random()))
            for x,y in curves:
                plt.plot(x,y,color=color,linewidth=3,alpha=alpha)
        elif shape == "Sphere":
            x,y = sphere(center=(random.random(),random.random()),radius=random.uniform(0.03,0.1))
            plt.fill(x,y,color=color,alpha=alpha)

    plt.text(0.05,0.95,f"Generative Poster Studio",fontsize=14,weight='bold',transform=plt.gca().transAxes)
    plt.text(0.05,0.91,f"Shape: {shape} • Palette: {palette_mode}",fontsize=10,transform=plt.gca().transAxes)
    plt.xlim(0,1); plt.ylim(0,1)
    if save:
        plt.savefig(f"final_{shape}_{palette_mode}.png",dpi=300)
    plt.show()

# -------------------------
# Interactive Controls
init_palette()
interact(
    draw_poster,
    style=Dropdown(options=["Pastel","Vivid","Mono"],value="Pastel",description="Style"),
    shape=Dropdown(options=["Blob","Flower","Sphere"],value="Blob",description="Shape"),
    n_layers=IntSlider(min=3,max=20,step=1,value=8,description="Layers"),
    wobble=FloatSlider(min=0.01,max=0.5,step=0.01,value=0.15,description="Wobble"),
    seed=IntSlider(min=0,max=999,step=1,value=42,description="Seed"),
    palette_mode=Dropdown(options=["pastel","vivid","mono","csv"],value="pastel",description="Palette"),
    save=False
);